(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{783:function(a,e,s){"use strict";s.r(e);var t=s(108),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"模块解包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块解包"}},[a._v("#")]),a._v(" 模块解包")]),a._v(" "),s("p",[a._v("从 2.5 版本起，炸毛框架的模块源码支持了打包和分发，分发后必不可少的一步就是将其解包。")]),a._v(" "),s("p",[a._v("解包过程大致为：")]),a._v(" "),s("ol",[s("li",[a._v("检查模块的配置文件是否正常。")]),a._v(" "),s("li",[a._v("检查模块的依赖问题，如果有依赖但未安装，则抛出异常。")]),a._v(" "),s("li",[a._v("检查 LightCache 轻量缓存是否需要写入。")]),a._v(" "),s("li",[a._v("检查 "),s("code",[a._v("zm_data")]),a._v(" 是否有需要存入的数据。")]),a._v(" "),s("li",[a._v("合并 "),s("code",[a._v("composer.json")]),a._v(" 文件。")]),a._v(" "),s("li",[a._v("拷贝 "),s("code",[a._v("zm_data")]),a._v(" 相关的文件。")]),a._v(" "),s("li",[a._v("写入 LightCache 相关数据。")]),a._v(" "),s("li",[a._v("提示用户手动合并 "),s("code",[a._v("global.php")]),a._v(" 全局配置文件。")]),a._v(" "),s("li",[a._v("拷贝模块 PHP 源文件。")])]),a._v(" "),s("h2",{attrs:{id:"解包命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解包命令"}},[a._v("#")]),a._v(" 解包命令")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./zhamao module:unpack "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("module-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("首先将待解包的 phar 文件放入 "),s("code",[a._v("zm_data")]),a._v(" 目录下的 "),s("code",[a._v("modules")]),a._v(" 文件夹（如果不存在需要手动创建），如果你手动修改过 "),s("code",[a._v("global.php")]),a._v(" 下面的 "),s("code",[a._v("module_loader.load_path")]),a._v(" 项，需要放入对应的目录。")]),a._v(" "),s("p",[a._v("放入后，结构如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("zm_data/\nzm_data/modules/\nzm_data/modules/foo.phar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("接下来，需要知道模块的名称。当然一般情况下，phar 的名称可以获取到模块的实际名称，如 "),s("code",[a._v("foo")]),a._v("，但最好用 "),s("code",[a._v("./zhamao module:list")]),a._v(" 列出模块的信息来获取真实的模块名称。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("./zhamao module:list\n# 下面是输出\n[foo]\n        类型: 模块包(phar)\n        位置: zm_data/modules/我是假的名字.phar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("解包过程十分简单，只需要执行一次命令即可。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("./zhamao module:unpack foo\n# 下面是输出\n[10:05:40] [I] Releasing source file: src/Module/Example/Hello.php\n[10:05:40] [I] Releasing source file: src/Module/Example/zm.json\n[10:05:40] [S] 解压完成！\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"命令参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令参数"}},[a._v("#")]),a._v(" 命令参数")]),a._v(" "),s("p",[a._v("在解包时会遇到各种复杂的情况，如源码文件已存在、数据已存在、依赖问题等，通过增加参数可以控制解包时的行为。")]),a._v(" "),s("h4",{attrs:{id:"overwrite-light-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overwrite-light-cache"}},[a._v("#")]),a._v(" --overwrite-light-cache")]),a._v(" "),s("p",[a._v("含义：覆盖现有的 LightCache 键值（如果存在的话）。")]),a._v(" "),s("h4",{attrs:{id:"overwrite-zm-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overwrite-zm-data"}},[a._v("#")]),a._v(" --overwrite-zm-data")]),a._v(" "),s("p",[a._v("含义：覆盖现有的 "),s("code",[a._v("zm_data")]),a._v(" 下的文件（如果存在的话）。")]),a._v(" "),s("h4",{attrs:{id:"overwrite-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overwrite-source"}},[a._v("#")]),a._v(" --overwrite-source")]),a._v(" "),s("p",[a._v("含义：覆盖现有的 PHP 模块源文件（如果存在的话）。")]),a._v(" "),s("h4",{attrs:{id:"ignore-depends"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ignore-depends"}},[a._v("#")]),a._v(" --ignore-depends")]),a._v(" "),s("p",[a._v("含义：解包时忽略检查依赖。")]),a._v(" "),s("h3",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[a._v("#")]),a._v(" 常见问题")]),a._v(" "),s("p",[a._v("如果你解包的模块包要求修改 "),s("code",[a._v("global.php")]),a._v("，则会出现类似这样的提示：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# ./zhamao module:unpack foo\n[14:47:39] [W] 模块作者要求用户手动修改 global.php 配置文件中的项目：\n[14:47:39] [W] *请把全局配置文件的light_cache项目中max_strlen选项调整为至少65536\n请输入修改模式，y(使用vim修改)/e(自行使用其他编辑器修改后确认)/N(默认暂不修改)：[y/e/N]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("一般这种情况，根据第二条提示（第二条提示为打包时填入的 "),s("code",[a._v("global-config-override")]),a._v("）。如果输入 y，则会自动执行命令 "),s("code",[a._v("vim config/global.php")]),a._v("，如果输入的是 e，则会等待你手动修改完成文件，最后按回车完成修改。默认情况直接回车的话，会跳过此步骤，如果模块要求了修改但跳过修改，安装后可能会有功能缺失等问题。")])])}),[],!1,null,null,null);e.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{800:function(e,v,_){"use strict";_.r(v);var o=_(108),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"从炸毛框架-v1-升级"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从炸毛框架-v1-升级"}},[e._v("#")]),e._v(" 从炸毛框架 V1 升级")]),e._v(" "),_("blockquote",[_("p",[e._v("这里只写明可能在升级过程中会影响原先代码执行的部分，不包含新增的特性等。")])]),e._v(" "),_("h3",{attrs:{id:"需要改变命名空间的类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#需要改变命名空间的类"}},[e._v("#")]),e._v(" 需要改变命名空间的类")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Framework\\Console")]),e._v(" -> "),_("code",[e._v("ZM\\Console\\Console")])]),e._v(" "),_("li",[_("code",[e._v("Swlib\\Util\\SingletonTrait")]),e._v(" -> "),_("code",[e._v("ZM\\Utils\\SingletonTrait")])]),e._v(" "),_("li",[_("code",[e._v("ZM\\Annotation\\Http\\Before")]),e._v(" -> "),_("code",[e._v("ZM\\Annotation\\Http\\HandleBefore")])]),e._v(" "),_("li",[_("code",[e._v("ZM\\Annotation\\Http\\After")]),e._v(" -> "),_("code",[e._v("ZM\\Annotation\\Http\\HandleAfter")])]),e._v(" "),_("li",[_("code",[e._v("@SwooleEventAt")]),e._v(" -> "),_("code",[e._v("@OnSwooleEvent")])]),e._v(" "),_("li",[e._v("删除 "),_("code",[e._v("@SwooleEventAfter")])]),e._v(" "),_("li",[e._v("删除 "),_("code",[e._v("ModBase")])]),e._v(" "),_("li",[_("code",[e._v("@HandleEvent")]),e._v(" -> "),_("code",[e._v("@SwooleHandler")])]),e._v(" "),_("li",[_("code",[e._v("ZM\\Utils\\ZMRobot")]),e._v(" -> "),_("code",[e._v("\\ZM\\API\\ZMRobot")])])]),e._v(" "),_("h3",{attrs:{id:"方法名称变更"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法名称变更"}},[e._v("#")]),e._v(" 方法名称变更")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("ZM\\Console::stackTrace()")]),e._v(" -> "),_("code",[e._v("ZM\\Console::trace()")])])]),e._v(" "),_("h3",{attrs:{id:"注解的变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注解的变化"}},[e._v("#")]),e._v(" 注解的变化")]),e._v(" "),_("p",[_("code",[e._v("@OnSwooleEvent")]),e._v("（原 "),_("code",[e._v("@SwooleEventAt")]),e._v("）中，"),_("code",[e._v("rule")]),e._v(" 参数不再是自定义语法的东西了（比如之前的 "),_("code",[e._v("connectType:qq")]),e._v(" 之类的鸡肋语法），直接是可执行的 PHP 代码，比如 "),_("code",[e._v("3 == 4")]),e._v("，"),_("code",[e._v("connectIsQQ()")]),e._v(" 之类的。")]),e._v(" "),_("p",[e._v("去除 "),_("code",[e._v("@CQAPISend")]),e._v("，因为目前没什么意义。")]),e._v(" "),_("p",[_("code",[e._v("@CQCommand")]),e._v(" 中，"),_("code",[e._v("regexMatch")]),e._v(" 变成 "),_("code",[e._v("pattern")]),e._v("，"),_("code",[e._v("fullMatch")]),e._v(" 变成 "),_("code",[e._v("regex")]),e._v("，消除歧义（第一个是 * 号匹配符进行匹配的，第二个是标准的正则表达式匹配）。同时新增 "),_("code",[e._v("start_with")]),e._v("，"),_("code",[e._v("end_with")]),e._v("，"),_("code",[e._v("keyword")]),e._v(" 平行选项。")]),e._v(" "),_("p",[_("code",[e._v("@OnTick")]),e._v(" 注解新增第二个参数 "),_("code",[e._v("worker_id")]),e._v("，其中默认是 0，代表只在 "),_("code",[e._v("#0")]),e._v(" 号工作进程上运行计时器。")]),e._v(" "),_("h3",{attrs:{id:"中间件编写的改变"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#中间件编写的改变"}},[e._v("#")]),e._v(" 中间件编写的改变")]),e._v(" "),_("p",[e._v("原先的 Middleware 是需要含有 "),_("code",[e._v("getName()")]),e._v(" 方法才合法，现在不需要了，但是对 "),_("code",[e._v("@MiddlewareClass")]),e._v(" 注解需要增加参数，也就是说原先 "),_("code",[e._v("getName()")]),e._v(" 返回的名称现在需要写到 "),_("code",[e._v('@MiddlewareClass("xxx")')]),e._v(" 这样的形式。")]),e._v(" "),_("h3",{attrs:{id:"zmbuf-的变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#zmbuf-的变化"}},[e._v("#")]),e._v(" ZMBuf 的变化")]),e._v(" "),_("p",[e._v("由于 2.0 框架使用了多进程模型，所以不能使用原先适用于单进程下全局变量的方式（ZMBuf）进行存取变量，所以 ZMBuf 下的所有方法都需要更改，其中 "),_("code",[e._v("get, set")]),e._v(" 等对缓存操作的模型请根据 2.0 的文档变更使用 "),_("code",[e._v("Redis")]),e._v(" 或内置的多进程共享内存可用的 "),_("code",[e._v("LightCache")]),e._v(" 轻量缓存。")]),e._v(" "),_("p",[e._v("而获取全局配置文件，如 "),_("code",[e._v("global.php")]),e._v(" 文件，也发生了变化，新框架引入了 "),_("code",[e._v("ZMConfig")]),e._v(" 对象，可以快速地区分各类环境变量从而读取不同的配置文件。比如我们获取原先的 global 配置文件中的一项："),_("code",[e._v('ZMBuf::globals("port")')]),e._v("，在 2.0 中需要使用 "),_("code",[e._v('ZMConfig::get("global", "port")')]),e._v(" 方式。以此类推，"),_("code",[e._v('ZMBuf::config("xxx")')]),e._v(" 也直接变为 "),_("code",[e._v('ZMConfig::get("xxx")')]),e._v(" 了。")])])}),[],!1,null,null,null);v.default=t.exports}}]);
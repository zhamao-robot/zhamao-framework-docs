{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{208:function(t,s,a){\"use strict\";a.r(s);var n=a(27),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"数据库\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据库\"}},[t._v(\"#\")]),t._v(\" 数据库\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置\"}},[t._v(\"#\")]),t._v(\" 配置\")]),t._v(\" \"),a(\"p\",[t._v(\"炸毛框架的数据库组件高度\"),a(\"s\",[t._v(\"模仿\")]),t._v(\"贴近 \"),a(\"strong\",[t._v(\"Swoft\")]),t._v(\"，支持原生 SQL、查询构造器，去掉了复杂的对象模型关联，同时默认为数据库连接池，IO 操作自动转换为 Swoole 的 MySQL 协程客户端，使开发变得简单。而且框架还对查询构造器编写了缓存机制，当大量请求是固定查询的话，可大幅优化数据库查询性能，可在配置文件中选择开启。\")]),t._v(\" \"),a(\"p\",[t._v(\"数据库的配置位于 \"),a(\"code\",[t._v(\"config/global.php\")]),t._v(\" 文件的 \"),a(\"code\",[t._v(\"sql_config\")]),t._v(\" 段。\")]),t._v(\" \"),a(\"p\",[t._v(\"数据库操作的唯一核心工具类和功能类为 \"),a(\"code\",[t._v(\"\\\\ZM\\\\DB\\\\DB\")]),t._v(\"，使用前需要配置 host 和 use 此类。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"查询构造器\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查询构造器\"}},[t._v(\"#\")]),t._v(\" 查询构造器\")]),t._v(\" \"),a(\"p\",[t._v(\"在 炸毛框架 中，数据库查询构造器为创建和执行数据库查询提供了一个方便的接口，它可用于执行应用程序中大部分数据库操作。同时，查询构造器使用 \"),a(\"code\",[t._v(\"prepare\")]),t._v(\" 预处理来保护程序免受 SQL 注入攻击，因此没有必要转义任何传入的字符串。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"新增数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#新增数据\"}},[t._v(\"#\")]),t._v(\" 新增数据\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"insert\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'admin_name'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'admin_password'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"save\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"其中 \"),a(\"code\",[t._v(\"insert\")]),t._v(\" 的参数是插入条目的数据列表。假设 admin 表有 \"),a(\"code\",[t._v(\"name\")]),t._v(\"，\"),a(\"code\",[t._v(\"password\")]),t._v(\" 两列。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"删除数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除数据\"}},[t._v(\"#\")]),t._v(\" 删除数据\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"delete\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"where\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"save\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"其中 \"),a(\"code\",[t._v(\"where\")]),t._v(\" 语句的第一个参数为列名，当只有两个参数时，第二个参数为值，效果等同于 SQL 语句：\"),a(\"code\",[t._v(\"WHERE name = 'admin_name'\")]),t._v(\"，当含有第三个参数且第二个参数为 \"),a(\"code\",[t._v(\"=\")]),t._v(\"，\"),a(\"code\",[t._v(\"!=\")]),t._v(\"，\"),a(\"code\",[t._v(\"LIKE\")]),t._v(\" 的时候，效果就是 \"),a(\"code\",[t._v(\"WHERE 第一个参数 第二个参数的操作符 第三个参数\")]),t._v(\"。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"更新数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#更新数据\"}},[t._v(\"#\")]),t._v(\" 更新数据\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"update\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"fake_admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"where\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin_name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"save\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[t._v(\"update()\")]),t._v(\" 方法中是要 SET 的内容的键值对，例如上面把 \"),a(\"code\",[t._v(\"name\")]),t._v(\" 列的值改为 \"),a(\"code\",[t._v(\"fake_admin\")]),t._v(\"。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"查询数据\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查询数据\"}},[t._v(\"#\")]),t._v(\" 查询数据\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"select\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"where\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"fake_admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fetchFirst\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 两种写法的效果是等价的\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"where\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"fake_admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"value\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[t._v(\"select()\")]),t._v(\" 方法的参数是要查询的列，默认留空为 \"),a(\"code\",[t._v('[\"*\"]')]),t._v(\"，也就是所有列都获取，也可以在 table 后直接 where 查询。\")]),t._v(\" \"),a(\"p\",[t._v(\"其中 \"),a(\"code\",[t._v(\"fetchFirst()\")]),t._v(\" 获取第一行数据。\")]),t._v(\" \"),a(\"p\",[t._v(\"如果只需获取一行中的一个字段值，也可以通过上面所示的 \"),a(\"code\",[t._v(\"value()\")]),t._v(\" 方法直接获取。\")]),t._v(\" \"),a(\"p\",[t._v(\"多列数据获取需要使用 \"),a(\"code\",[t._v(\"fetchAll()\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"table\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"select\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fetchAll\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"foreach\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"as\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$k\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$v\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$v\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"name\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"PHP_EOL\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"直接执行-sql\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#直接执行-sql\"}},[t._v(\"#\")]),t._v(\" 直接执行 SQL\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"在查询器外执行的 SQL 语句都不会被缓存，都是一定会请求数据库的。\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"db-rawquery\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#db-rawquery\"}},[t._v(\"#\")]),t._v(\" DB::rawQuery()\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"用途：直接执行模板查询的裸 SQL 语句。\")]),t._v(\" \"),a(\"li\",[t._v(\"参数：\"),a(\"code\",[t._v(\"$line\")]),t._v(\"，\"),a(\"code\",[t._v(\"$params\")])])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"$line\")]),t._v(\" 为请求的 SQL 语句，\"),a(\"code\",[t._v(\"$params\")]),t._v(\" 为模板参数。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DB\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"rawQuery\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"SELECT * FROM admin WHERE name = ?\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"fake_admin\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"echo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$r\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token double-quoted-string string\"}},[t._v('\"password\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\")])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}